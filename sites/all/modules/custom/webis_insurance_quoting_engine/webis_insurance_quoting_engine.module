<?php

require_once('webis_insurance_quoting_engine.api.inc');

define('INSURANCE_PRICE_ENTITY_NAME', "insurance_price");
define('VISITOR_INSURANCE_BUNDLE_NAME', "visitor_to_canada_insurance_price");
define('LIFE_INSURANCE_BUNDLE_NAME', "life_insurance_price");
define('VISITOR_INSURANCE', "visitor_insurance");
define('LIFE_INSURANCE', "life_insurance");
/**
 * @file
 */
function webis_insurance_quoting_engine_menu(){
	$items = array();
  $items['get-a-quote/visitor-to-canada-insurance'] = array(
    'title' => 'Visitor to canada insurance plan and price search',
    'description' => "Visitor to canada insurance plan and price search",
    'page callback' => 'webis_insurance_quoting_engine_visitor_canada_price_search',
    'page arguments' => array(),
    'access arguments' => array('access content'),
  );
/*  $items['get-a-quote/result'] = array(
    'title' => 'Get A Quote - Result',
    'description' => "Get an Aviva Home Insurance or Auto Insurance quote from a broker near you.",
    'page callback' => 'aviva_lead_gen_get_a_quote_result',
    'access arguments' => array('access content'),
  );
  $items['find-a-broker'] = array(
    'title' => 'Find a Broker',
    'description' => "Find an Aviva broker near you.",
    'page callback' => 'drupal_get_form',
    'page arguments' => array('aviva_lead_gen_find_a_broker_result'),
    'access arguments' => array('access content'),
    'file' => 'aviva_lead_gen.ap_bpms.inc',
  );
  $items['find-a-broker/branch/%'] = array(
    'title' => 'Branch',
    'description' => "Branch detail page",
    'page callback' => 'ap_bpms_get_branch',
    'page arguments' => array(2),
    'access arguments' => array('access content'),
    'file' => 'aviva_lead_gen.ap_bpms.inc',
  );
  $items['admin/aviva_dashboard/aviva_lead_gen'] = array(
    'title' => 'Aviva Lead Gen Settings',
    'description' => "Configure the lead gen form settings.",
    'page callback' => 'drupal_get_form',
    'page arguments' => array('aviva_lead_gen_configure_form'),
    'access arguments' => array('access administration pages'),
  );*/
  return $items;
}

function webis_insurance_quoting_engine_visitor_canada_price_search(){

	if(!isset($_GET['start']) || !isset($_GET['end']) || !isset($_GET['birthday']) || !isset($_GET['coverage']))
	{
		$msg = "";
		if(!isset($_GET['start'])){
      $msg .= t("Please chose your insurance policy 'Start Date'!")."<br>";
    }
		if(!isset($_GET['end'])){
      $msg .= t("Please chose your insurance policy 'End Date'!")."<br>";
    }		
		if(!isset($_GET['birthday'])){
      $msg .= t("Please chose your 'Birthday'!")."<br>";
    }
    if(!isset($_GET['coverage'])){
      $msg .= t("Please chose your insurance policy 'Coverage'!")."<br>";
    }
    return $msg;
	}
	//Get the birthday
	$birthday = $_GET['birthday'];
  $birthday_time = strtotime( $birthday );
	//Insurance Amount
	$coverage = $_GET['coverage'];
	$start = $_GET['start'];
	$end = $_GET['end'];
	$start_time = strtotime( $start );
	$end_time = strtotime( $end );
  //get age from birthday and start time
  $effective_date_age = webis_insurance_quoting_engine_age_from_dob($birthday, $start);
  //get age from birthday
  $current_age = webis_insurance_quoting_engine_age_from_dob($birthday);  
	//total days
	$days = (($end_time - $start_time)/(60*60*24))+1;
	$days = round($days);
  setlocale(LC_MONETARY, 'en_US');

  $previous_level_amount = webis_insurance_quoting_engine_vtc_get_previous_coverage($coverage);
  $next_level_amount = webis_insurance_quoting_engine_vtc_get_next_coverage($coverage);;
  $current_path = current_path();

  $previous_link = l(t("Compare with @amount", array("@amount" => $previous_level_amount)), $current_path, array(
    'query' => array(
      "start" => $_GET['start'], 
      "end" => $_GET['end'], 
      "birthday" => $_GET['birthday'], 
      "coverage" => $previous_level_amount,
    )
  ));
  $next_link = l(t("Compare with @amount", array("@amount" => $next_level_amount)), $current_path, array(
    "query" => array(
      "start" => $_GET["start"], 
      "end" => $_GET["end"], 
      "birthday" => $_GET["birthday"], 
      "coverage" => $next_level_amount,
    )
  ));

	global $language;
	$content = '
    <div class="price_search_result_header">
  		<div class="price_search_result_summary">
        <span class="item first-item summary_label">'.t("Plans For:").'</span>
  			<span class="item age"><span class="label">'.t("Age:").'</span><span class="value">'.$current_age.'</span></span>
  		  <span class="item effective_date_age"><span class="label">'.t("Effective Date Age:").'</span><span class="value">'.$effective_date_age.'</span></span>
        <span class="item duration"><span class="label">'.t("Trip Duration:").'</span><span class="value">'.format_plural($days, "1 day", "@count days").'</span></span>
  			<span class="item last-item coverage"><span class="label">'.t("Coverage:").'</span><span class="value">'.money_format('%.0n', $coverage).'</span></span>
  		</div>
      <div class="price_search_compare_btns">
        <span class="compare_btn previous_level">'.$previous_link.'</span>
        <span class="compare_btn next_level">'.$next_link.'</span>
      </div>
    </div>
	';
  $plans = webis_insurance_quoting_engine_get_plans(VISITOR_INSURANCE);
  dpm($plans);
  $age = $current_age;
  $deductibles = array();
  $deductibles_no_spmcc = array();
  $plan_prices = array();
  $available_plan_ids = "";
  //Initalize the tab;
  $has_price = false;
  $has_price_no_spmcc = false;
  $search_price_result = "";
  $search_price_result_no_spmcc = "";  
  //$key = entity id, $value = entity;
  foreach ($plans as $key => $value) {
    $which_age = webis_insurance_quoting_engine_get_tip_age_to_cal_premium($value);
    switch ($which_age) {
      case 'purchase_date_age':
        $age = $current_age;        
        break;
      case 'effective_date_age':
        $age = $effective_date_age;
        break;
      default:
        break;
    }
    $price = webis_insurance_quoting_engine_get_tip_total_price($value, $age, $coverage, TRUE, $days);
    $price_no_spmcc = webis_insurance_quoting_engine_get_tip_total_price($value, $age, $coverage, FALSE, $days);

    if (!empty($price) || !empty($price_no_spmcc)) {
      $plan_prices[$key]["title"] = $value->title;
      $plan_prices[$key]["id"] = $key;
      $available_plan_ids .= $key."+";
      if (!empty($price)) {
        $has_price = true;
        $plan_prices[$key]["prices"] = $price;
        $deductibles = array_unique (array_merge ($deductibles, array_keys($price)));
      }
      if (!empty($price_no_spmcc)) {
        $has_price_no_spmcc = true;        
        $plan_prices[$key]["prices_no_spmcc"] = $price_no_spmcc;        
        $deductibles_no_spmcc = array_unique (array_merge ($deductibles_no_spmcc, array_keys($price_no_spmcc)));
      }
    }
  }
  $available_plan_ids .= "0";
  $plan_carousel = views_embed_view('custom_content', 'block_7', $available_plan_ids);
  $content .= $plan_carousel;
  sort($deductibles);
  sort($deductibles_no_spmcc);
  dpm($available_plan_ids);
  dpm($plan_prices);
  dpm($deductibles);
  dpm($deductibles_no_spmcc);

  $search_price_result = webis_insurance_quoting_engine_build_price_search_result($plan_prices, $deductibles, $days, true);
  $search_price_result_no_spmcc = webis_insurance_quoting_engine_build_price_search_result($plan_prices, $deductibles, $days, false);

  //Build the quicktab.
  $tabs = array(
    'spmcc' => array(
      'title' => t("With Stable Pre-Existing Medical Condition Coverage"),
      'contents' => array('#markup' => $search_price_result, 'weight' => 1),
    ),
    'nospmcc' => array(
      'title' => t("Without Stable Pre-Existing Medical Condition Coverage"),
      'contents' => array('#markup' => $search_price_result_no_spmcc, 'weight' => 2),
    ),
  );

  $qt_name = 'price_search_result';

  $qt_options = array(
    'style' => 'nostyle',
    'ajax' => FALSE,
    'default_tab' => 'spmcc',
  );

  $quicktabs_renderrable = quicktabs_build_quicktabs($qt_name, $qt_options, $tabs);
  dpm($quicktabs_renderrable);
  $quicktabs_render = drupal_render($quicktabs_renderrable['content']);
  $quicktabs_content = "
    <div class='price_search_result_wrapper'>
    ".$quicktabs_render."
    </div>
  ";

  $content .= $quicktabs_content;
	return $content;
}

/**
* Build the price search result table
**/
function webis_insurance_quoting_engine_build_price_search_result($plan_prices, $deductibles, $days, $has_spmcc = true) {
  //Set up the search result wrapper
  if ($has_spmcc) {
    $search_price_result = "<div class='plan_result_wrapper spmcc'>";
  }
  else {
    $search_price_result = "<div class='plan_result_wrapper no_spmcc'>";
  }
  //Setup the search result header
  $search_price_result .= "<div class='plan_result_header'>";
  foreach ($plan_prices as $key => $plan_price) {
    $search_price_result .= "<span class='plan_item'><span class='price_per_day'>".t("<span class='part_1'>Price</span><span class='part_2'>/Day</span>")."</span><span class='price_total'>".t("Total")."</span></span>";
  }
  $search_price_result .= "</div>";
  //Setup the search result content.
  $search_price_result .= "<div class='plan_result_content'>";
  foreach ($deductibles as $key => $deductible) {
    $search_price_result .= "<div class='deductible deductible_".$deductible."'>";
    $search_price_result .= "<div class='deductible_header'><span class='label'>".t("Deductiable").":</span><span class='value'>".money_format('%.0n', $deductible)."</span></div>";
    $search_price_result .= "<div class='deductible_content'>";
    dpm($plan_prices);
    foreach ($plan_prices as $key => $plan_price) {
      if ($key == count($plan_prices)) {
        $search_price_result .= "<span class='plan_price last'>";        
      }
      else {
        $search_price_result .= "<span class='plan_price'>";
      }
      if (isset($plan_price['prices'][$deductible])) {
        $deductible_price = round($plan_price['prices'][$deductible], 2);
        $search_price_result .= "<span class='price_per_day'>".round($deductible_price/$days, 2)."</span><span class='price_total'>".$deductible_price."</span>";
      }
      else {
        $search_price_result .= "<span class='price_per_day'>".t("N/A")."</span><span class='price_total'>".t("N/A")."</span>";
      }
      $search_price_result .= "</span>";
    }
    $search_price_result .= "</div>";
    //end of <!--div class='deductible_content'-->
    $search_price_result .= "</div>";
    //end of <!--div class='deductible'-->
  }
  $search_price_result .= "</div>";
  //End of <!--div class='plan_result_content'-->

  //Buy this plan / View plan details
  $search_price_result .= "<div class='plan_result_footer'>";
  foreach ($plan_prices as $key => $plan_price) {
    $search_price_result .= "<span class='plan_item'><span class='buy_plan cta'>".l(t("Buy This Plan"), "buy-plan", array("query" => array("id" => $plan_price['id'])))."</span><span class='view_plan cta'>".l(t("View Details"), "view-plan", array("query" => array("id" => $plan_price['id'])) )."</span></span>";
  }
  $search_price_result .= "</div>";


  $search_price_result .= "</div>";
  //End of <--div class='plan_result_wrapper'-->
  return $search_price_result;
}

/**
*	Helper function - calculate the age bases on the dob and policy_start_date(optional).
* @Arguments
* dob - birthday
* 
**/
function webis_insurance_quoting_engine_age_from_dob($dob, $policy_start_date = null) {
  $birthday_time = strtotime($dob);
  //If there is no start date, then use current time.
  if(!empty($policy_start_date)){
    $start_time = strtotime($policy_start_date);
    $age = ( date("md", $birthday_time) > date("md",$start_time) ? ( ( date("Y",$start_time)- date("Y", $birthday_time) )-1 ) : ( date("Y",$start_time) - date("Y", $birthday_time) ) );
  }else{
    $age = ( date("md", $birthday_time) > date("md") ? ( ( date("Y") - date("Y", $birthday_time) ) - 1 ) : ( date("Y") - date("Y", $birthday_time) ) );    
  }
  $age = $age > 0 ? $age : 0;
  return $age;
}
